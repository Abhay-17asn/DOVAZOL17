<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>TimeTrust Airdrop - DOVAZOL</title>
  <script src="https://telegram.org/js/telegram-web-app.js"></script>
  <style>
    body { font-family: sans-serif; background: #0a0a23; color: white; text-align: center; }
    .container { padding: 20px; }
    button { padding: 12px 24px; background: #28a745; color: white; border: none; margin: 10px; border-radius: 8px; cursor: pointer; }
  </style>
</head>
<body>
  <div class="container">
    <h1>ðŸš€ TimeTrust Airdrop</h1>
    <h2>Token: DOVAZOL</h2>
    <p>Your Balance: <span id="balance">Loading...</span> DOVAZOL</p>
    <button onclick="claimTokens()">ðŸ“² Tap to Earn</button>
    <button onclick="withdrawTokens()">ðŸ’¸ Withdraw to Wallet</button>
  </div>

  <script>
    const tg = window.Telegram.WebApp;
    tg.expand();

    const user = tg.initDataUnsafe.user;
    const userId = user.id;

    async function updateBalance() {
      const res = await fetch(`/api/balance/${userId}`);
      const data = await res.json();
      document.getElementById("balance").textContent = data.balance;
    }

    async function claimTokens() {
      await fetch('/api/claim', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ userId })
      });
      updateBalance();
    }

    async function withdrawTokens() {
      const wallet = prompt("Enter your wallet address:");
      if (wallet) {
        const res = await fetch('/api/withdraw', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ userId, wallet })
        });
        const msg = await res.text();
        alert(msg);
        updateBalance();
      }
    }

    updateBalance();
  </script>
</body>
</html>

const express = require('express');
const app = express();
const cors = require('cors');
const { ethers } = require('ethers');

app.use(cors());
app.use(express.json());

const users = {}; // In-memory storage

const provider = new ethers.JsonRpcProvider("https://mainnet.infura.io/v3/YOUR_INFURA_KEY");
const wallet = new ethers.Wallet("YOUR_PRIVATE_KEY", provider);
const tokenAddress = "0xYourDOVAZOLTokenAddress";
const tokenAbi = [
  "function transfer(address to, uint amount) public returns (bool)",
];
const tokenContract = new ethers.Contract(tokenAddress, tokenAbi, wallet);

app.get('/api/balance/:id', (req, res) => {
  const id = req.params.id;
  if (!users[id]) users[id] = { balance: 0 };
  res.json({ balance: users[id].balance });
});

app.post('/api/claim', (req, res) => {
  const { userId } = req.body;
  if (!users[userId]) users[userId] = { balance: 0 };
  users[userId].balance += 10; // 10 DOVAZOL per tap
  res.sendStatus(200);
});

app.post('/api/withdraw', async (req, res) => {
  const { userId, wallet: userWallet } = req.body;
  if (!users[userId] || users[userId].balance === 0) return res.status(400).send("No balance");

  const amount = users[userId].balance;

  try {
    const tx = await tokenContract.transfer(userWallet, ethers.parseUnits(amount.toString(), 18));
    await tx.wait();
    users[userId].balance = 0;
    res.send("Withdrawal successful! TX: " + tx.hash);
  } catch (err) {
    res.status(500).send("Transfer failed: " + err.message);
  }
});

app.listen(3000, () => console.log('
